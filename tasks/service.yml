---
- name: "Create {{ eth_sevice_name }} systemd service"
  template:
    src: ethereum.service.j2
    dest: "{{ eth_service_dir }}/{{ eth_sevice_name }}.service"
    mode: '0644'

- name: "Create lighthouse systemd service"
  template:
    src: lighthouse.service.j2
    dest: "{{ eth_service_dir }}/lighthouse.service"
    mode: '0644'    

- name: "Find uid of {{ eth_user_name }}"
  command: "id -u {{ eth_user_name }}"
  register: the_user_uid
  check_mode: no # Run even in check mode, otherwise the playbook fails with --check.
  changed_when: false
  become: yes
  become_user: "{{ eth_user_name }}"

- name: "Determine XDG_RUNTIME_DIR"
  set_fact:
    xdg_runtime_dir: "/run/user/{{ the_user_uid.stdout }}"
  changed_when: false
  become: yes
  become_user: "{{ eth_user_name }}"

- name: "Update bashrc for {{ eth_user_name }}"
  lineinfile:
    path: "/home/{{ eth_user_name }}/.bashrc"
    line: "export XDG_RUNTIME_DIR=/run/user/{{ the_user_uid.stdout }}"

- name: "Copy ethereum.sh"
  template:
    src: ethereum.sh
    dest: "{{ eth_root }}/bin/ethereum.sh"
    owner: "{{ eth_user_name }}"
    group: "{{ eth_user_name }}"
    mode: 0755

- name: "Copy lighthouse.sh"
  template:
    src: lighthouse.sh
    dest: "{{ eth_root }}/bin/lighthouse.sh"
    owner: "{{ eth_user_name }}"
    group: "{{ eth_user_name }}"
    mode: 0755    

- name: "Start and enable lighthouse service"
  become: true
  become_user: "{{ eth_user_name }}"
  environment:
    XDG_RUNTIME_DIR: "{{ xdg_runtime_dir }}"
  systemd:
    scope: user
    daemon_reload: yes
    name: "lighthouse.service"
    enabled: "{{ lth_service_enabled }}"
    state: "{{ lth_service_state }}"    

- name: "Start and enable {{ eth_sevice_name }} service"
  become: true
  become_user: "{{ eth_user_name }}"
  environment:
    XDG_RUNTIME_DIR: "{{ xdg_runtime_dir }}"
  systemd:
    scope: user
    daemon_reload: yes
    name: "{{ eth_sevice_name }}.service"
    enabled: "{{ eth_service_enabled }}"
    state: "{{ eth_service_state }}"
